name: Teamcity Setup

runs:
  using: composite
  steps:
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    # По умолчанию в ubuntu отсуствуе команда ifconfig
    - name: Install ifconfig
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y net-tools

    - name: Set up host environment variable
      shell: bash
      # Команда для определения ip адреса для обращения из другого контейнера в документации Selenoid UI: https://aerokube.com/selenoid-ui/latest/
      run: |
        echo "HOST=$(ifconfig | grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)" >> $GITHUB_ENV

    - name: Set up host config property
      shell: bash
      run: echo "host=$HOST:8111" >> src/main/resources/config.properties

    - name: Pull Selenoid browsers
      shell: bash
      # Парсить browsers.json и будет docker pull все браузеры
      run: |
        for browser in $(awk -F'"' '/"image": "/{print $4}' "config/browsers.json"); do
          docker pull $browser
        done

    - name: Run Selenoid
      shell: bash
      # Флаг -d запускает контейнер в фоновом режиме, если мы этого не сделаем, мы никогда не перейдем к следующему степу
      run: |
        docker run -d --name selenoid \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $(pwd)/config/:/etc/selenoid/:ro \
        -p 4444:4444 \
        aerokube/selenoid:latest-release

    # В этом степе нет смысла запуска на GitHub Actions, но для локальной отладки с act вы можете использовать
    - name: Run Selenoid UI
      shell: bash
      run: |
        docker run -d --name selenoid-ui \
        -p 8080:8080 \
        aerokube/selenoid-ui:latest-release \
        --selenoid-uri http://$HOST:4444

    - name: Run TeamCity Server
      shell: bash
      # Флаг -u 0 запускает контейнер от имени root, чтобы был доступ к записи файлов в директории, которые указаны в volume.
      run: |
        docker run -u 0 -d --name teamcity-server  \
        -v $(pwd)/tmp/teamcity_server/datadir:/data/teamcity_server/datadir \
        -v $(pwd)/tmp/teamcity_server/logs:/opt/teamcity/logs  \
        -p 8111:8111 \
        jetbrains/teamcity-server:2023.11.1

    - name: Setup TeamCity server
      shell: bash
      # Настройка сервера при первом запуске (принятие лицензии, выбор базы данных и тд), реализованная в виде теста
      run: ./mvnw clean test -Dtest=SetupServerTest#setupTeamCityServerTest

    - name: Setup superUserToken environment variable
      shell: bash
      run: echo "SUPER_USER_TOKEN=$(docker logs teamcity-server | grep 'Super user authentication token' | tail -n 1 | awk '{print $6}')" >> $GITHUB_ENV

    - name: Set up superUserToken config property
      shell: bash
      run: echo "superUserToken=$SUPER_USER_TOKEN" >> src/main/resources/config.properties